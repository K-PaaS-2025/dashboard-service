# Application Name
spring.application.name=dashboard-service

# Server Configuration
server.port=8081

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/dashboard_service_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

# JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Seoul

# Logging Configuration
logging.level.org.classnation.dashboardservice=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG

# External Services
external.user-service.url=http://localhost:8080
external.report-service.url=http://localhost:1112

# Swagger Spring UI Setting
springdoc.packages-to-scan=org.classnation.dashboardservice
springdoc.default-consumes-media-type=application/json;charset=UTF-8
springdoc.default-produces-media-type=application/json;charset=UTF-8
springdoc.cache.disabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.api-docs.groups.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.url=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.swagger-ui.path=/dashboard-service.html
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha

# Resilience4j Retry Configuration
resilience4j.retry.instances.userService.max-attempts=3
resilience4j.retry.instances.userService.wait-duration=200ms
resilience4j.retry.instances.userService.exponential-backoff-multiplier=4
resilience4j.retry.instances.userService.enable-exponential-backoff=true

resilience4j.retry.instances.reportService.max-attempts=3
resilience4j.retry.instances.reportService.wait-duration=200ms
resilience4j.retry.instances.reportService.exponential-backoff-multiplier=4
resilience4j.retry.instances.reportService.enable-exponential-backoff=true

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.userService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userService.slow-call-rate-threshold=100
resilience4j.circuitbreaker.instances.userService.slow-call-duration-threshold=3000ms
resilience4j.circuitbreaker.instances.userService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.userService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.userService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.userService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.userService.sliding-window-size=10

resilience4j.circuitbreaker.instances.reportService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.reportService.slow-call-rate-threshold=100
resilience4j.circuitbreaker.instances.reportService.slow-call-duration-threshold=3000ms
resilience4j.circuitbreaker.instances.reportService.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.reportService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.reportService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.reportService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.reportService.sliding-window-size=10

# Resilience4j Timeout Configuration
resilience4j.timelimiter.instances.userService.timeout-duration=3s
resilience4j.timelimiter.instances.reportService.timeout-duration=3s

# CORS Configuration (Admin domain only)
# TODO: Configure specific admin origins in production
cors.allowed-origins=*
